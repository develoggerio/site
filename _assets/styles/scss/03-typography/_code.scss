/**
 * @file
 *
 * Syntax highlighting styles (adapted from Solarized theme).
 * Note: This file is ignored by scss-lint.
 */

/*doc
---
title: Code
name: code
category: Typography
---
*/

/*doc
---
title: Code block
name: code--block
category: Typography
parent: code
---
We're using Rouge for syntax highlighting and our own color scheme based on a
sass port of the Solarized theme. See
<a href="/styleguide/colors.html">the Colors tab</a> for more info.

```html_example
<div class="highlighter-rouge"><pre class="highlight"><code>
<span class="c1">// Uses Sass compiler to process styles, adds vendor prefixes, minifies, then</span>
<span class="c1">// outputs file to the appropriate location.</span>
<span class="nx">gulp</span><span class="p">.</span><span class="nx">task</span><span class="p">(</span><span class="s1">'build:styles:main'</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">sass</span><span class="p">(</span><span class="nx">paths</span><span class="p">.</span><span class="nx">sassFiles</span> <span class="o">+</span> <span class="s1">'/main.scss'</span><span class="p">,</span> <span class="p">{</span>
    <span class="na">style</span><span class="p">:</span> <span class="s1">'compressed'</span><span class="p">,</span>
    <span class="na">trace</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">loadPath</span><span class="p">:</span> <span class="p">[</span><span class="nx">paths</span><span class="p">.</span><span class="nx">sassFiles</span><span class="p">]</span>
  <span class="p">}).</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">postcss</span><span class="p">([</span> <span class="nx">autoprefixer</span><span class="p">({</span> <span class="na">browsers</span><span class="p">:</span> <span class="p">[</span><span class="s1">'last 2 versions'</span><span class="p">]</span> <span class="p">})</span> <span class="p">]))</span>
    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">cleancss</span><span class="p">())</span>
    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">gulp</span><span class="p">.</span><span class="nx">dest</span><span class="p">(</span><span class="nx">paths</span><span class="p">.</span><span class="nx">jekyllCssFiles</span><span class="p">))</span>
    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">gulp</span><span class="p">.</span><span class="nx">dest</span><span class="p">(</span><span class="nx">paths</span><span class="p">.</span><span class="nx">siteCssFiles</span><span class="p">))</span>
    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">browserSync</span><span class="p">.</span><span class="nx">stream</span><span class="p">())</span>
    <span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">'error'</span><span class="p">,</span> <span class="nx">gutil</span><span class="p">.</span><span class="nx">log</span><span class="p">);</span>
<span class="p">});</span>
</code></pre></div>
```

*/

.highlight {
  table td.code { width: 100%; }
  border: 1px solid $light-gray !important;
  border-radius: .4em;
}

.highlight .line-numbers {
  text-align: right;
  font-size: 13px;
  line-height: 1.45em;
  @if $solarized == light {
    background: lighten($base03, 1) $noise-bg !important;
    border-right: 1px solid darken($base01, 2) !important;
    box-shadow: lighten($base03, 2) -1px 0 inset;
    text-shadow: lighten($base01, 2) 0 -1px;
  } @else {
    background: $base01 $noise-bg !important;
    border-right: 1px solid darken($base03, 2) !important;
    box-shadow: lighten($base01, 2) -1px 0 inset;
    text-shadow: darken($base01, 10) 0 -1px;
  }
  span { color: $base01 !important; }
  padding: .8em !important;
  border-radius: 0;
}

figure.code, pre {
  box-shadow: rgba(#000, .06) 0 0 10px;
  .highlight pre { box-shadow: none; }
}

pre {
  background: $pre-bg $noise-bg;
  border-radius: .4em;
  font-family: $monospace-font !important;
  border: 1px solid $pre-border;
  line-height: 1.45em;
  font-size: 13px !important;
  margin: 0;
  color: $pre-color;
  overflow: auto;
}

.pre-code {
  font-family: $monospace-font !important;
  overflow: scroll;
  overflow-y: hidden;
  display: block;
  padding: .8em;
  overflow-x: auto;
  line-height: 1.45em;
  background: $base03 $noise-bg !important;
  color: $base1 !important;
  span { color: $base1 !important; }
  span { font-style: normal !important; font-weight: normal !important; }

  .c      { color: $pre-border !important; font-style: italic !important; }                                                  /* Comment */
  .cm     { color: $pre-border !important; font-style: italic !important; }                                                  /* Comment.Multiline */
  .cp     { color: $pre-border !important; font-style: italic !important;  }                                                 /* Comment.Preproc */
  .c1     { color: $pre-border !important; font-style: italic !important; }                                                  /* Comment.Single */
  .cs     { color: $pre-border !important; font-weight: bold !important; font-style: italic !important; }                    /* Comment.Special */
  .err    { color: $solar-red !important; background: none !important; }                                                     /* Error */
  .k      { color: $solar-orange !important; }                                                                               /* Keyword */
  .o      { color: $base1 !important; font-weight: bold !important; }                                                        /* Operator */
  .p      { color: $base1 !important; }                                                                                      /* Operator */
  .ow     { color: $solar-cyan !important; font-weight: bold !important; }                                                   /* Operator.Word */
  .gd     { color: $base1 !important; background-color: mix($solar-red, $base03, 25%) !important; display: inline-block; }   /* Generic.Deleted */
  .gd .x  { color: $base1 !important; background-color: mix($solar-red, $base03, 35%) !important; display: inline-block; }   /* Generic.Deleted.Specific */
  .ge     { color: $base1 !important; font-style: italic !important; }                                                       /* Generic.Emph */
  //.gr     { color: #aa0000 }                                                                                               /* Generic.Error */
  .gh     { color: $base01 !important; }                                                                                     /* Generic.Heading */
  .gi     { color: $base1 !important; background-color: mix($solar-green, $base03, 20%) !important; display: inline-block; } /* Generic.Inserted */
  .gi .x  { color: $base1 !important; background-color: mix($solar-green, $base03, 40%) !important; display: inline-block; } /* Generic.Inserted.Specific */
  //.go     { color: #888888 }                                                                                               /* Generic.Output */
  //.gp     { color: #555555 }                                                                                               /* Generic.Prompt */
  .gs     { color: $base1 !important; font-weight: bold !important; }                                                        /* Generic.Strong */
  .gu     { color: $solar-violet !important; }                                                                               /* Generic.Subheading */
  //.gt     { color: #aa0000 }                                                                                               /* Generic.Traceback */
  .kc     { color: $solar-green !important; font-weight: bold !important; }                                                  /* Keyword.Constant */
  .kd     { color: $solar-blue !important; }                                                                                 /* Keyword.Declaration */
  .kp     { color: $solar-orange !important; font-weight: bold !important; }                                                 /* Keyword.Pseudo */
  .kr     { color: $solar-yellow !important; font-weight: bold !important; }                                                 /* Keyword.Reserved */
  .kt     { color: $solar-cyan !important; }                                                                                 /* Keyword.Type */
  .n      { color: $solar-blue !important; }
  .na     { color: $solar-blue !important; }                                                                                 /* Name.Attribute */
  .nb     { color: $solar-green !important; }                                                                                /* Name.Builtin */
  .nc     { color: $solar-yellow !important;}                                                                                /* Name.Class */
  .no     { color: $solar-magenta !important; }                                                                              /* Name.Constant */
  //.ni     { color: #800080 }                                                                                               /* Name.Entity */
  .nl     { color: $solar-green !important; }
  .ne     { color: $solar-blue !important; font-weight: bold !important; }                                                   /* Name.Exception */
  .nf     { color: $solar-blue !important; font-weight: bold !important; }                                                   /* Name.Function */
  .nn     { color: $solar-magenta !important; }                                                                              /* Name.Namespace */
  .nt     { color: $solar-blue !important; font-weight: bold !important; }                                                   /* Name.Tag */
  .nx     { color: $solar-magenta !Important; }
  //.bp     { color: #999999 }                                          /* Name.Builtin.Pseudo */
  //.vc     { color: #008080 }                                          /* Name.Variable.Class */
  .vg     { color: $solar-blue !important; }                            /* Name.Variable.Global */
  .vi     { color: $solar-blue !important; }                            /* Name.Variable.Instance */
  .nv     { color: $solar-blue !important; }                            /* Name.Variable */
  //.w      { color: #bbbbbb }                                          /* Text.Whitespace */
  .mf     { color: $solar-cyan !important; }                            /* Literal.Number.Float */
  .m      { color: $solar-cyan !important; }                            /* Literal.Number */
  .mh     { color: $solar-cyan !important; }                            /* Literal.Number.Hex */
  .mi     { color: $solar-cyan !important; }                            /* Literal.Number.Integer */
  //.mo     { color: #009999 }                                          /* Literal.Number.Oct */
  .s      { color: $solar-cyan !important; }                            /* Literal.String */
  //.sb     { color: #d14 }                                             /* Literal.String.Backtick */
  //.sc     { color: #d14 }                                             /* Literal.String.Char */
  .sd     { color: $solar-cyan !important; }                            /* Literal.String.Doc */
  .s2     { color: $solar-cyan !important; }                            /* Literal.String.Double */
  .se     { color: $solar-red !important; }                             /* Literal.String.Escape */
  //.sh     { color: #d14 }                                             /* Literal.String.Heredoc */
  .si     { color: $solar-blue !important; }                            /* Literal.String.Interpol */
  //.sx     { color: #d14 }                                             /* Literal.String.Other */
  .sr     { color: $solar-cyan !important; }                            /* Literal.String.Regex */
  .s1     { color: $solar-cyan !important; }                            /* Literal.String.Single */
  //.ss     { color: #990073 }                                          /* Literal.String.Symbol */
  //.il     { color: #009999 }                                          /* Literal.Number.Integer.Long */
  div { .gd, .gd .x, .gi, .gi .x { display: inline-block; width: 100%; }}
}

.highlight {
  pre { background: none; border-radius: 0; border: none; padding: 0; margin-bottom: 0; }
  margin: 0 3em 1.5em;
  background: #ddd;
  overflow-y: hidden;
  overflow-x: auto;
}

$solar-scroll-bg: rgba(#fff, .15);
$solar-scroll-thumb: rgba(#fff, .2);
@if $solarized == light {
  $solar-scroll-bg: rgba(#000, .15);
  $solar-scroll-thumb: rgba(#000, .15);
}

pre, .highlight {
  &::-webkit-scrollbar {  height: .5em; background: $solar-scroll-bg; }
  &::-webkit-scrollbar-thumb:horizontal { background: $solar-scroll-thumb;  -webkit-border-radius: 4px; border-radius: 4px }
}

.highlight code {
  @extend .pre-code;
  background: #fff !important;
}

figure.code {
  background: none;
  padding: 0;
  border: 0;
  margin-bottom: 1.5em;
  pre { margin-bottom: 0; }
  figcaption {
    position: relative;
    @extend .code-title;
    a { @extend .download-source; }
  }
  .highlight {
    margin-bottom: 0;
  }
}

.code-title {
  text-align: center;
  font-size: 13px;
  line-height: 2em;
  text-shadow: #cbcccc 0 1px 0;
  color: #474747;
  font-weight: normal;
  margin-bottom: 0;
  @include border-top-radius(5px);
  font-family: "Helvetica Neue", Arial, "Lucida Grande", "Lucida Sans Unicode", Lucida, sans-serif;
  background: #aaaaaa top repeat-x;
  border: 1px solid #565656;
  border-top-color: #cbcbcb;
  border-left-color: #a5a5a5;
  border-right-color: #a5a5a5;
  border-bottom: 0;
}

.download-source {
  position: absolute; right: .8em;
  color: #666 !important;
  z-index: 1;
  font-size: 13px;
  text-shadow: #cbcccc 0 1px 0;
  padding-left: 3em;
}

.highlight-console .pre-code {
  color: $pre-color !important;
}
